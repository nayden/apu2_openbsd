ext_if		= "em0"
int_if		= "{ vether0 athn0 em1 em2 }"
lan		= "10.0.0.0/24"
ping		= "echoreq"
zabbix		= "1.2.3.4"

## Tables
table <bruteforce> persist

## Opcions
set block-policy return
set optimization aggressive
set skip on lo
antispoof for { $ext_if, $int_if, lo }

## Scrub
match in all scrub (no-df random-id max-mss 1440)
match out on egress inet from !(egress:network) to any \
	nat-to (egress:0) set prio (5, 6)

## Block all
block in quick on egress from <bruteforce> to any
block all

## Pass in from interal
pass in on $int_if from ($int_if:network)

## Pass out all
pass out

## Pass out with prio
pass out quick inet proto tcp from any to any \
	port { 22 2222 } set prio 7

pass out quick inet proto tcp from any to any \
	port { 80 443 } set prio (5, 6)

## We love ping
pass in inet proto icmp all icmp-type $ping

## We need zabbix
pass in on $ext_if proto { tcp, udp } from $zabbix \
        to $ext_if port 10050

pass in on $ext_if proto { tcp, udp } from $zabbix \
	to $ext_if port 10053 rdr-to 10.0.0.90 port 10050

## Pass on internal DNS
pass in on $int_if proto udp from $lan to $int_if port 53 \
	set prio 6

## Pass HTTP to relayd
pass in on { $ext_if, $int_if } proto tcp from any \
	to $ext_if port 80 rdr-to $ext_if port 80 \
	flags S/SA modulate state \
	(max-src-conn 30, max-src-conn-rate 10/5, \
	overload <bruteforce> flush global) \
	set prio (2, 3)

## Pass HTTPS to internal server
pass in on { $ext_if, $int_if } proto tcp from any \
	to { $ext_if, $int_if } port 443 rdr-to 10.0.0.83 port 443 \
	flags S/SA modulate state \
	(max-src-conn 60, max-src-conn-rate 60/6, \
	overload <bruteforce> flush global) \
	set prio 6

## Pass SSH to apu2
pass in log on $ext_if proto tcp from any os OpenBSD \
	to $ext_if port 22 \
	flags S/SA modulate state \
	(max-src-conn 3, max-src-conn-rate 3/2, \
	overload <bruteforce> flush global) \
	set prio 6
